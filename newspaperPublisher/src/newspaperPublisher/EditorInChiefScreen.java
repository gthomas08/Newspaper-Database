/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package newspaperPublisher;


import java.awt.event.ItemEvent;
import java.sql.*;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import static java.sql.JDBCType.NULL;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author gts10
 */
public class EditorInChiefScreen extends javax.swing.JFrame {
    
    Connection conn=null;
    Statement stmt=null;
    PreparedStatement pst=null;
    ResultSet rs=null;
    
    private File[] images = null;
    private String email, password;
    
    
    /**
     * Creates new form EditorInChiefScreen
     */
    public EditorInChiefScreen(String email, String password) {
        this.email = email;
        this.password = password;
        conn=CheckConnection.ConnectDb();
        initComponents();
    }
    
    public EditorInChiefScreen() {
        conn=CheckConnection.ConnectDb();
        initComponents();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        editorInChiefTabbedPane = new javax.swing.JTabbedPane();
        showEditArticles = new javax.swing.JPanel();
        journalistLabel1 = new javax.swing.JLabel();
        journalistBox1 = new javax.swing.JComboBox<>();
        articlesScrollPane1 = new javax.swing.JScrollPane();
        articlesList1 = new javax.swing.JList<>();
        infoLabel1 = new javax.swing.JLabel();
        titleLabel1 = new javax.swing.JLabel();
        titleField1 = new javax.swing.JTextField();
        summaryLabel1 = new javax.swing.JLabel();
        summaryField1 = new javax.swing.JTextField();
        statusLabel1 = new javax.swing.JLabel();
        commentsLabel1 = new javax.swing.JLabel();
        commentsField1 = new javax.swing.JTextField();
        updateInfoButton1 = new javax.swing.JButton();
        statusBox1 = new javax.swing.JComboBox<>();
        definePositionInPaper = new javax.swing.JPanel();
        paperLabel2 = new javax.swing.JLabel();
        paperBox2 = new javax.swing.JComboBox<>();
        articlesScrollPane2 = new javax.swing.JScrollPane();
        articlesList2 = new javax.swing.JList<>();
        infoLabel2 = new javax.swing.JLabel();
        titleLabel2 = new javax.swing.JLabel();
        titleField2 = new javax.swing.JTextField();
        startingPageLabel2 = new javax.swing.JLabel();
        startingPageSpinner2 = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        numberOfPagesSpinner2 = new javax.swing.JSpinner();
        definePositionButton2 = new javax.swing.JButton();
        submitArticlePanel = new javax.swing.JPanel();
        pathLabel3 = new javax.swing.JLabel();
        titleLabel3 = new javax.swing.JLabel();
        summaryLabel3 = new javax.swing.JLabel();
        numberOfPagesLabel3 = new javax.swing.JLabel();
        keywordsLabel3 = new javax.swing.JLabel();
        imageLabel3 = new javax.swing.JLabel();
        categoryLabel3 = new javax.swing.JLabel();
        coauthorsLabel3 = new javax.swing.JLabel();
        pathField3 = new javax.swing.JTextField();
        titleField3 = new javax.swing.JTextField();
        summaryField3 = new javax.swing.JTextField();
        keywordsField3 = new javax.swing.JTextField();
        imageButton3 = new javax.swing.JButton();
        submitButton3 = new javax.swing.JButton();
        categoryBox3 = new javax.swing.JComboBox<>();
        coauthorsScrollPanel = new javax.swing.JScrollPane();
        coauthorsList3 = new javax.swing.JList<>();
        numberOfPagesSpinner3 = new javax.swing.JSpinner();
        submitCategory = new javax.swing.JPanel();
        categoryNameLabel4 = new javax.swing.JLabel();
        categoryField4 = new javax.swing.JTextField();
        parentCategoryLabel4 = new javax.swing.JLabel();
        categoryBox4 = new javax.swing.JComboBox<>();
        submitButton4 = new javax.swing.JButton();
        descriptionLabel4 = new javax.swing.JLabel();
        descriptionField4 = new javax.swing.JTextField();
        editorInChiefMenuBar = new javax.swing.JMenuBar();
        editorInChiefMenu = new javax.swing.JMenu();
        logoutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Editor In Chief");

        journalistLabel1.setText("Journalist");

        try{
            List<String> jemailList = new ArrayList<String>();
            String sqlQuery="SELECT DISTINCT `journalist_email` FROM `submits`";

            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(sqlQuery);

            while(rs.next()){
                jemailList.add(rs.getString("journalist_email"));
            }

            String[] jemailArr = jemailList.toArray(new String[jemailList.size()]);
            journalistBox1.setModel(new javax.swing.DefaultComboBoxModel<>(jemailArr));
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.toString());
        }
        journalistBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                journalistBox1ItemStateChanged(evt);
            }
        });

        articlesList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                articlesList1ValueChanged(evt);
            }
        });
        articlesScrollPane1.setViewportView(articlesList1);

        infoLabel1.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        infoLabel1.setText("Info");

        titleLabel1.setText("Title");

        titleField1.setEditable(false);
        titleField1.setMaximumSize(new java.awt.Dimension(250, 2147483647));

        summaryLabel1.setText("Summary");

        summaryField1.setEditable(false);

        statusLabel1.setText("Status");

        commentsLabel1.setText("Comments");

        updateInfoButton1.setText("Update Info");
        updateInfoButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateInfoButton1ActionPerformed(evt);
            }
        });

        try{

        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.toString());
        }

        javax.swing.GroupLayout showEditArticlesLayout = new javax.swing.GroupLayout(showEditArticles);
        showEditArticles.setLayout(showEditArticlesLayout);
        showEditArticlesLayout.setHorizontalGroup(
            showEditArticlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(showEditArticlesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(showEditArticlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(showEditArticlesLayout.createSequentialGroup()
                        .addComponent(journalistLabel1)
                        .addGap(125, 125, 125)
                        .addComponent(journalistBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(articlesScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(0, 266, Short.MAX_VALUE)
                .addGroup(showEditArticlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(showEditArticlesLayout.createSequentialGroup()
                        .addGroup(showEditArticlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(showEditArticlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(infoLabel1)
                                .addComponent(titleLabel1))
                            .addComponent(summaryLabel1)
                            .addComponent(statusLabel1)
                            .addComponent(commentsLabel1))
                        .addGroup(showEditArticlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(showEditArticlesLayout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addGroup(showEditArticlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(summaryField1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(titleField1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, showEditArticlesLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(showEditArticlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(commentsField1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(statusBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(updateInfoButton1))
                .addGap(85, 85, 85))
        );
        showEditArticlesLayout.setVerticalGroup(
            showEditArticlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(showEditArticlesLayout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(showEditArticlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(showEditArticlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(journalistLabel1)
                        .addComponent(journalistBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(infoLabel1))
                .addGap(20, 20, 20)
                .addGroup(showEditArticlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(showEditArticlesLayout.createSequentialGroup()
                        .addGroup(showEditArticlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(titleLabel1)
                            .addComponent(titleField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(showEditArticlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(summaryLabel1)
                            .addComponent(summaryField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(showEditArticlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(statusLabel1)
                            .addComponent(statusBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(showEditArticlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(commentsLabel1)
                            .addComponent(commentsField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addComponent(updateInfoButton1))
                    .addComponent(articlesScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(209, Short.MAX_VALUE))
        );

        try{
            //Select articles based on journalists
            List<String> articleList = new ArrayList<String>();
            String articleQuery = "SELECT `path` FROM `article` INNER JOIN submits ON path=article_path WHERE journalist_email = " + "'" + journalistBox1.getSelectedItem().toString() + "'";
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(articleQuery);

            while(rs.next()){
                articleList.add(rs.getString("path"));
            }

            //List to array
            String[] articleArray = articleList.toArray(new String[articleList.size()]);
            articlesList1.setListData(articleArray);

            rs.close();
            stmt.close();
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.toString());
        }

        editorInChiefTabbedPane.addTab("Show and Edit Articles", showEditArticles);

        paperLabel2.setText("Paper");

        try{
            List<String> paperList = new ArrayList<String>();
            String sqlQuery="SELECT `id` FROM `paper`";

            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(sqlQuery);

            while(rs.next()){
                paperList.add(rs.getString("id"));
            }

            String[] paperArr = paperList.toArray(new String[paperList.size()]);
            paperBox2.setModel(new javax.swing.DefaultComboBoxModel<>(paperArr));
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.toString());
        }
        paperBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                paperBox2ItemStateChanged(evt);
            }
        });

        articlesList2.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                articlesList2ValueChanged(evt);
            }
        });
        articlesScrollPane2.setViewportView(articlesList2);

        infoLabel2.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        infoLabel2.setText("Info");

        titleLabel2.setText("Title");

        titleField2.setEditable(false);

        startingPageLabel2.setText("Starting Page");

        startingPageSpinner2.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        jLabel1.setText("Number of Pages");

        numberOfPagesSpinner2.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        definePositionButton2.setText("Define Position");
        definePositionButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                definePositionButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout definePositionInPaperLayout = new javax.swing.GroupLayout(definePositionInPaper);
        definePositionInPaper.setLayout(definePositionInPaperLayout);
        definePositionInPaperLayout.setHorizontalGroup(
            definePositionInPaperLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(definePositionInPaperLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(definePositionInPaperLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(definePositionInPaperLayout.createSequentialGroup()
                        .addComponent(paperLabel2)
                        .addGap(127, 127, 127)
                        .addComponent(paperBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(articlesScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(269, 269, 269)
                .addGroup(definePositionInPaperLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(infoLabel2)
                    .addGroup(definePositionInPaperLayout.createSequentialGroup()
                        .addGroup(definePositionInPaperLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(startingPageLabel2)
                            .addComponent(jLabel1)
                            .addComponent(titleLabel2)
                            .addComponent(definePositionButton2))
                        .addGap(34, 34, 34)
                        .addGroup(definePositionInPaperLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(numberOfPagesSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(titleField2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(startingPageSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(68, Short.MAX_VALUE))
        );
        definePositionInPaperLayout.setVerticalGroup(
            definePositionInPaperLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(definePositionInPaperLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(definePositionInPaperLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(infoLabel2)
                    .addGroup(definePositionInPaperLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(paperLabel2)
                        .addComponent(paperBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(definePositionInPaperLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(articlesScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(definePositionInPaperLayout.createSequentialGroup()
                        .addGroup(definePositionInPaperLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(titleLabel2)
                            .addComponent(titleField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(definePositionInPaperLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(startingPageLabel2)
                            .addComponent(startingPageSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(definePositionInPaperLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(numberOfPagesSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(definePositionButton2)))
                .addContainerGap(150, Short.MAX_VALUE))
        );

        try{
            //Select articles based on journalists
            List<String> articleList = new ArrayList<String>();
            String articleQuery = "SELECT `path` FROM `paper` INNER JOIN `article` ON id=paper_id WHERE id = " + "'" + paperBox2.getSelectedItem().toString() + "'";
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(articleQuery);

            while(rs.next()){
                articleList.add(rs.getString("path"));
            }

            //List to array
            String[] articleArray = articleList.toArray(new String[articleList.size()]);
            articlesList2.setListData(articleArray);

            rs.close();
            stmt.close();
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.toString());
        }

        editorInChiefTabbedPane.addTab("Define Position In Paper", definePositionInPaper);

        pathLabel3.setText("Path*");

        titleLabel3.setText("Title*");

        summaryLabel3.setText("Summary*");

        numberOfPagesLabel3.setText("Number of Pages*");

        keywordsLabel3.setText("Keywords*");

        imageLabel3.setText("Image*");

        categoryLabel3.setText("Category*");

        coauthorsLabel3.setText("Co-authors");

        imageButton3.setText("Select Image");
        imageButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imageButton3ActionPerformed(evt);
            }
        });

        submitButton3.setText("Submit");
        submitButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButton3ActionPerformed(evt);
            }
        });

        try{
            List<String> names = new ArrayList<String>();
            String sql_query="SELECT name FROM category";

            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(sql_query);

            while(rs.next()){
                names.add(rs.getString("name"));
            }

            String[] namesArr = names.toArray(new String[names.size()]);
            categoryBox3.setModel(new javax.swing.DefaultComboBoxModel<>(namesArr));
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.toString());
        }

        try{
            List<String> emails = new ArrayList<String>();
            String sql_query="SELECT email FROM journalist WHERE email != " + "'"+ email+"'";

            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(sql_query);

            while(rs.next()){
                emails.add(rs.getString("email"));
            }
            coauthorsList3.setModel(new javax.swing.AbstractListModel<String>() {
                String[] emailsArr = emails.toArray(new String[emails.size()]);
                public int getSize() { return emailsArr.length; }
                public String getElementAt(int i) { return emailsArr[i]; }
            });
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.toString());
        }
        coauthorsScrollPanel.setViewportView(coauthorsList3);

        numberOfPagesSpinner3.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        javax.swing.GroupLayout submitArticlePanelLayout = new javax.swing.GroupLayout(submitArticlePanel);
        submitArticlePanel.setLayout(submitArticlePanelLayout);
        submitArticlePanelLayout.setHorizontalGroup(
            submitArticlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(submitArticlePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(submitArticlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, submitArticlePanelLayout.createSequentialGroup()
                        .addGroup(submitArticlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(keywordsLabel3)
                            .addComponent(numberOfPagesLabel3))
                        .addGap(0, 21, Short.MAX_VALUE)
                        .addGroup(submitArticlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(coauthorsScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                            .addComponent(numberOfPagesSpinner3, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(imageButton3)
                            .addComponent(categoryBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(keywordsField3)))
                    .addGroup(submitArticlePanelLayout.createSequentialGroup()
                        .addGroup(submitArticlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(titleLabel3)
                            .addComponent(summaryLabel3))
                        .addGap(77, 77, 77)
                        .addGroup(submitArticlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(summaryField3)
                            .addComponent(titleField3)))
                    .addComponent(submitButton3)
                    .addGroup(submitArticlePanelLayout.createSequentialGroup()
                        .addComponent(pathLabel3)
                        .addGap(109, 109, 109)
                        .addComponent(pathField3))
                    .addComponent(imageLabel3)
                    .addComponent(categoryLabel3)
                    .addComponent(coauthorsLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        submitArticlePanelLayout.setVerticalGroup(
            submitArticlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(submitArticlePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(submitArticlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pathLabel3)
                    .addComponent(pathField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(submitArticlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(titleLabel3)
                    .addComponent(titleField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(submitArticlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(summaryLabel3)
                    .addComponent(summaryField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(submitArticlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(keywordsLabel3)
                    .addComponent(keywordsField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(submitArticlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numberOfPagesLabel3)
                    .addComponent(numberOfPagesSpinner3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(submitArticlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(imageLabel3)
                    .addComponent(imageButton3))
                .addGap(18, 18, 18)
                .addGroup(submitArticlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(categoryLabel3)
                    .addComponent(categoryBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(submitArticlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(coauthorsLabel3)
                    .addComponent(coauthorsScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(submitButton3)
                .addContainerGap(58, Short.MAX_VALUE))
        );

        editorInChiefTabbedPane.addTab("Submit Article", submitArticlePanel);

        categoryNameLabel4.setText("Category Name*");

        parentCategoryLabel4.setText("Parent Category");

        try{
            List<String> names = new ArrayList<String>();
            String sql_query="SELECT name FROM category";

            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(sql_query);
            names.add("");
            while(rs.next()){
                names.add(rs.getString("name"));
            }

            String[] namesArr = names.toArray(new String[names.size()]);
            categoryBox4.setModel(new javax.swing.DefaultComboBoxModel<>(namesArr));
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.toString());
        }

        submitButton4.setText("Submit");
        submitButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButton4ActionPerformed(evt);
            }
        });

        descriptionLabel4.setText("Description*");

        javax.swing.GroupLayout submitCategoryLayout = new javax.swing.GroupLayout(submitCategory);
        submitCategory.setLayout(submitCategoryLayout);
        submitCategoryLayout.setHorizontalGroup(
            submitCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(submitCategoryLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(submitCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(submitButton4)
                    .addGroup(submitCategoryLayout.createSequentialGroup()
                        .addGroup(submitCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(categoryNameLabel4)
                            .addComponent(descriptionLabel4)
                            .addComponent(parentCategoryLabel4))
                        .addGap(61, 61, 61)
                        .addGroup(submitCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(categoryBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(submitCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(categoryField4)
                                .addComponent(descriptionField4, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)))))
                .addContainerGap(524, Short.MAX_VALUE))
        );
        submitCategoryLayout.setVerticalGroup(
            submitCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(submitCategoryLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(submitCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(categoryNameLabel4)
                    .addComponent(categoryField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(submitCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(descriptionLabel4)
                    .addComponent(descriptionField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(submitCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(parentCategoryLabel4)
                    .addComponent(categoryBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(submitButton4)
                .addContainerGap(359, Short.MAX_VALUE))
        );

        editorInChiefTabbedPane.addTab("Submit Category", submitCategory);

        editorInChiefMenu.setText("email");

        logoutMenuItem.setText("Logout");
        logoutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutMenuItemActionPerformed(evt);
            }
        });
        editorInChiefMenu.add(logoutMenuItem);

        editorInChiefMenu.setText(email);

        editorInChiefMenuBar.add(editorInChiefMenu);

        setJMenuBar(editorInChiefMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(editorInChiefTabbedPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(editorInChiefTabbedPane)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void articlesList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_articlesList1ValueChanged
        try{
            //Show the articles credentials
            if(articlesList1.getSelectedIndex() != -1){
                String articleQuery = "SELECT `title`, `summary`, `status`, `comments` FROM `article` WHERE path = " + "'" + articlesList1.getSelectedValue() + "'";
                Statement stmt = conn.createStatement();
                ResultSet rs = stmt.executeQuery(articleQuery);
                
                
                //Initial options for statusBox1
                statusBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Accepted", "To be revised", "Rejected" }));
                
                //Set the fields for title, summary, status, comments, category, number_of_pages
                if(rs.next()){
                    titleField1.setText(rs.getString("title"));
                    summaryField1.setText(rs.getString("summary"));
                    switch(rs.getString("status")) {
                    case "accepted":
                        statusBox1.setSelectedIndex(0);
                        break;
                    case "to_be_revised":
                        statusBox1.setSelectedIndex(1);
                        break;
                    case "rejected":
                        statusBox1.setSelectedIndex(2);
                    }
                    commentsField1.setText(rs.getString("comments")==null ? "" : rs.getString("comments"));
                }
                
                rs.close();
                stmt.close();
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }//GEN-LAST:event_articlesList1ValueChanged

    private void updateInfoButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateInfoButton1ActionPerformed
        try{
            PreparedStatement pst = conn.prepareStatement("UPDATE `article` SET status = ?, comments = ? WHERE path = " + "'" + articlesList1.getSelectedValue() + "'");
            
            //Convert status values to right enums
            String statusEnumValue = "";
            switch(statusBox1.getSelectedIndex()) {
            case 0:
                statusEnumValue = "accepted";
                break;
            case 1:
                statusEnumValue = "to_be_revised";          
                break;
            case 2:
                statusEnumValue = "rejected";               
            }
            
            //Set the values
            pst.setString(1, statusEnumValue);
            pst.setString(2, commentsField1.getText());
            pst.execute();
            
            JOptionPane.showMessageDialog(null, "Update Successfull.");
            
            pst.close();
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.toString());
        }
        
    }//GEN-LAST:event_updateInfoButton1ActionPerformed

    private void articlesList2ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_articlesList2ValueChanged
        try{
            //Show the articles credentials
            if(articlesList2.getSelectedIndex() != -1){
                String articleQuery = "SELECT `title`, `start_page`, `article`.`number_of_pages` FROM `paper` INNER JOIN `article` ON id=paper_id WHERE path = " + "'" + articlesList2.getSelectedValue() + "'";
                Statement stmt = conn.createStatement();
                ResultSet rs = stmt.executeQuery(articleQuery);
                
                //Set the fields for title, summary, status, comments, category, number_of_pages
                if(rs.next()){
                    titleField2.setText(rs.getString("title"));
                    startingPageSpinner2.setValue(rs.getInt("start_page"));
                    numberOfPagesSpinner2.setValue(rs.getInt("number_of_pages"));
                }
                
                rs.close();
                stmt.close();
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }//GEN-LAST:event_articlesList2ValueChanged

    private void definePositionButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_definePositionButton2ActionPerformed
        try{
            PreparedStatement pst = conn.prepareStatement("UPDATE `article` SET start_page = ?, number_of_pages = ? WHERE path = " + "'" + articlesList2.getSelectedValue() + "'");
            
            //Set the values
            pst.setInt(1, (Integer)startingPageSpinner2.getValue());
            pst.setInt(2, (Integer)numberOfPagesSpinner2.getValue());
            pst.execute();
            
            JOptionPane.showMessageDialog(null, "Update Successfull.");
            
            pst.close();
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }//GEN-LAST:event_definePositionButton2ActionPerformed

    private void imageButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imageButton3ActionPerformed

        JFileChooser imageChooser = new JFileChooser();
        imageChooser.setMultiSelectionEnabled(true);
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
            "Images", "jpg", "jpeg", "png", "tif", "tiff");
        imageChooser.setFileFilter(filter);
        int returnVal = imageChooser.showOpenDialog(getParent());

        if(returnVal == JFileChooser.APPROVE_OPTION) {
            images = imageChooser.getSelectedFiles();
            imageButton3.setText("Image(s) Selected");
        }

    }//GEN-LAST:event_imageButton3ActionPerformed

    private void submitButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButton3ActionPerformed
        try{
            int noPages = (Integer) numberOfPagesSpinner3.getValue();
            boolean pathCorr = false;
            //Check if the path is correct
            //Regex Unix: ^((\.\./|[a-zA-Z0-9_/\-\\])*\.[a-zA-Z0-9]+)$
            //Regex Windows: ^([a-zA-Z]\:|\\\\[^\/\\:*?"<>|]+\\[^\/\\:*?"<>|]+)(\\[^\/\\:*?"<>|]+)+(\.[^\/\\:*?"<>|]+)$

            String regexUnix = "^((\\.\\./|[a-zA-Z0-9_/\\-\\\\])*\\.[a-zA-Z0-9]+)$";
            String regexWindows = "^([a-zA-Z]\\:|\\\\\\\\[^\\/\\\\:*?\"<>|]+\\\\[^\\/\\\\:*?\"<>|]+)(\\\\[^\\/\\\\:*?\"<>|]+)+(\\.[^\\/\\\\:*?\"<>|]+)$";

            if((pathField3.getText().matches(regexUnix) || pathField3.getText().matches(regexWindows)) == true)
            pathCorr = true;

            if(pathField3.getText().isEmpty()==false && titleField3.getText().isEmpty()==false && summaryField3.getText().isEmpty()==false && noPages >= 1 && keywordsField3.getText().isEmpty()==false && categoryBox3.getSelectedIndex()!=-1 && images!=null){
                if (pathCorr == true){

                    String categoryQuery="SELECT id FROM category WHERE name= " + "'" + categoryBox3.getSelectedItem().toString() + "'";

                    // Get category id from name
                    Statement stmt = conn.createStatement();
                    ResultSet rs = stmt.executeQuery(categoryQuery);
                    String categoryID = "";
                    if(rs.next()){
                        categoryID = rs.getString("id");
                    }

                    //Insert elements into article
                    PreparedStatement pst = conn.prepareStatement("INSERT INTO `article` (`path`, `title`, `summary`, `number_of_pages`,`category_id`) VALUES (?, ?, ?, ?, ?)");

                    pst.setString(1, pathField3.getText());
                    pst.setString(2, titleField3.getText());
                    pst.setString(3, summaryField3.getText());
                    pst.setInt(4, noPages);
                    pst.setString(5, categoryID);

                    pst.execute();

                    //Insert elements into keywords
                    List<String> keywords = Arrays.asList(keywordsField3.getText().split("\\s*,\\s*"));
                    PreparedStatement pstKeywords = conn.prepareStatement("INSERT INTO `keywords`(`article_path`, `keyword`) VALUES(?, ?)");

                    for (int i = 0; i < keywords.size(); i++) {
                        pstKeywords.setString(1, pathField3.getText());
                        pstKeywords.setString(2, keywords.get(i));
                        pstKeywords.execute();
                    }

                    //Insert elements into images
                    List<File> imagesList = Arrays.asList(images);
                    PreparedStatement pstImages = conn.prepareStatement("INSERT INTO `images`(`article_path`, `image`) VALUES(?, ?)");

                    for (int i = 0; i < imagesList.size(); i++) {
                        InputStream imageStream = new FileInputStream(imagesList.get(i).getAbsolutePath());
                        pstImages.setString(1, pathField3.getText());
                        pstImages.setBlob(2, imageStream);
                        pstImages.execute();
                    }

                    //Insert elements into sumbits
                    List<String> authors = coauthorsList3.getSelectedValuesList();
                    PreparedStatement pstAuthors = conn.prepareStatement("INSERT INTO `submits`(`journalist_email`, `article_path`, submission_date) VALUES(?, ?, CURDATE())");

                    pstAuthors.setString(1, email);
                    pstAuthors.setString(2, pathField3.getText());
                    pstAuthors.execute();
                    for (int i = 0; i < authors.size(); i++) {
                        pstAuthors.setString(1, authors.get(i));
                        pstAuthors.setString(2, pathField3.getText());
                        pstAuthors.execute();
                    }
                    
                    
                    
                    //Success panel
                    JOptionPane.showMessageDialog(null, "Article Submitted.");

                    pstImages.close();
                    pstAuthors.close();
                    pstKeywords.close();
                    pst.close();
                    rs.close();
                }else{
                    JOptionPane.showMessageDialog(null, "Wrong path. Try again.");
                }
            }else{
                JOptionPane.showMessageDialog(null, "Incomplete Credentials. Try again.");
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }//GEN-LAST:event_submitButton3ActionPerformed

    private void submitButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButton4ActionPerformed
        try{
            if(categoryField4.getText().isEmpty() == false && descriptionField4.getText().isEmpty() == false){
                
                // Get category id from name
                String parentCategoryQuery="SELECT id FROM category WHERE name= " + "'" + categoryBox4.getSelectedItem().toString() + "'";
                Statement stmt = conn.createStatement();
                ResultSet rs = stmt.executeQuery(parentCategoryQuery);
                String parentCategoryID = null;
                if(rs.next()){
                    parentCategoryID = rs.getString("id");
                }
                
                //Insert elements into article
                PreparedStatement pst = conn.prepareStatement("INSERT INTO `category` (`name`, `description`, `parent_id`) VALUES (?, ?, ?);");

                pst.setString(1, categoryField4.getText());
                pst.setString(2, descriptionField4.getText());
                pst.setString(3, parentCategoryID);
                pst.execute();
                
                
                
                //Update categoryBox4, categoryBox3
                categoryBox4.addItem(categoryField4.getText());
                categoryBox3.addItem(categoryField4.getText());
                
                //Success panel
                JOptionPane.showMessageDialog(null, "Category Submitted.");
                
            }else{
                JOptionPane.showMessageDialog(null, "Incomplete Credentials. Try again.");
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }//GEN-LAST:event_submitButton4ActionPerformed

    private void journalistBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_journalistBox1ItemStateChanged
        
        try{
            if(evt.getStateChange()==ItemEvent.SELECTED){
                //Select articles based on journalists
                List<String> articleList = new ArrayList<String>();
                String articleQuery = "SELECT `path` FROM `article` INNER JOIN submits ON path=article_path WHERE journalist_email = " + "'" + journalistBox1.getSelectedItem().toString() + "'";
                Statement stmt = conn.createStatement();
                ResultSet rs = stmt.executeQuery(articleQuery);

                while(rs.next()){
                    articleList.add(rs.getString("path"));
                }

                //List to array
                String[] articleArray = articleList.toArray(new String[articleList.size()]);
                articlesList1.setListData(articleArray);

                rs.close();
                stmt.close();
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }//GEN-LAST:event_journalistBox1ItemStateChanged

    private void paperBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_paperBox2ItemStateChanged
        try{
            if(evt.getStateChange()==ItemEvent.SELECTED){
                //Select articles based on journalists
                List<String> articleList = new ArrayList<String>();
                String articleQuery = "SELECT `path` FROM `paper` INNER JOIN `article` ON id=paper_id WHERE id = " + "'" + paperBox2.getSelectedItem().toString() + "'";
                Statement stmt = conn.createStatement();
                ResultSet rs = stmt.executeQuery(articleQuery);

                while(rs.next()){
                    articleList.add(rs.getString("path"));
                }

                //List to array
                String[] articleArray = articleList.toArray(new String[articleList.size()]);
                articlesList2.setListData(articleArray);

                rs.close();
                stmt.close();
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }//GEN-LAST:event_paperBox2ItemStateChanged

    private void logoutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutMenuItemActionPerformed
        LoginScreen var_ls = new LoginScreen();
        var_ls.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_logoutMenuItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditorInChiefScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditorInChiefScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditorInChiefScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditorInChiefScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditorInChiefScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> articlesList1;
    private javax.swing.JList<String> articlesList2;
    private javax.swing.JScrollPane articlesScrollPane1;
    private javax.swing.JScrollPane articlesScrollPane2;
    private javax.swing.JComboBox<String> categoryBox3;
    private javax.swing.JComboBox<String> categoryBox4;
    private javax.swing.JTextField categoryField4;
    private javax.swing.JLabel categoryLabel3;
    private javax.swing.JLabel categoryNameLabel4;
    private javax.swing.JLabel coauthorsLabel3;
    private javax.swing.JList<String> coauthorsList3;
    private javax.swing.JScrollPane coauthorsScrollPanel;
    private javax.swing.JTextField commentsField1;
    private javax.swing.JLabel commentsLabel1;
    private javax.swing.JButton definePositionButton2;
    private javax.swing.JPanel definePositionInPaper;
    private javax.swing.JTextField descriptionField4;
    private javax.swing.JLabel descriptionLabel4;
    private javax.swing.JMenu editorInChiefMenu;
    private javax.swing.JMenuBar editorInChiefMenuBar;
    private javax.swing.JTabbedPane editorInChiefTabbedPane;
    private javax.swing.JButton imageButton3;
    private javax.swing.JLabel imageLabel3;
    private javax.swing.JLabel infoLabel1;
    private javax.swing.JLabel infoLabel2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JComboBox<String> journalistBox1;
    private javax.swing.JLabel journalistLabel1;
    private javax.swing.JTextField keywordsField3;
    private javax.swing.JLabel keywordsLabel3;
    private javax.swing.JMenuItem logoutMenuItem;
    private javax.swing.JLabel numberOfPagesLabel3;
    private javax.swing.JSpinner numberOfPagesSpinner2;
    private javax.swing.JSpinner numberOfPagesSpinner3;
    private javax.swing.JComboBox<String> paperBox2;
    private javax.swing.JLabel paperLabel2;
    private javax.swing.JLabel parentCategoryLabel4;
    private javax.swing.JTextField pathField3;
    private javax.swing.JLabel pathLabel3;
    private javax.swing.JPanel showEditArticles;
    private javax.swing.JLabel startingPageLabel2;
    private javax.swing.JSpinner startingPageSpinner2;
    private javax.swing.JComboBox<String> statusBox1;
    private javax.swing.JLabel statusLabel1;
    private javax.swing.JPanel submitArticlePanel;
    private javax.swing.JButton submitButton3;
    private javax.swing.JButton submitButton4;
    private javax.swing.JPanel submitCategory;
    private javax.swing.JTextField summaryField1;
    private javax.swing.JTextField summaryField3;
    private javax.swing.JLabel summaryLabel1;
    private javax.swing.JLabel summaryLabel3;
    private javax.swing.JTextField titleField1;
    private javax.swing.JTextField titleField2;
    private javax.swing.JTextField titleField3;
    private javax.swing.JLabel titleLabel1;
    private javax.swing.JLabel titleLabel2;
    private javax.swing.JLabel titleLabel3;
    private javax.swing.JButton updateInfoButton1;
    // End of variables declaration//GEN-END:variables

}
