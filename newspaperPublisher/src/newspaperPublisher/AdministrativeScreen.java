/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package newspaperPublisher;


import java.awt.event.ItemEvent;
import java.sql.*;
import java.time.temporal.ChronoUnit;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;

public class AdministrativeScreen extends javax.swing.JFrame {

    /**
     * Creates new form AdministrativeScreen
     */
    
    Connection conn=null;
    Statement stmt=null;
    PreparedStatement pst=null;
    ResultSet rs=null;
    
    private String email;
    
    public AdministrativeScreen(String email){
        this.email = email;
        conn=CheckConnection.ConnectDb();
        initComponents();
    }
    
    public AdministrativeScreen() {
        conn=CheckConnection.ConnectDb();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AdministrativeTabbedPane = new javax.swing.JTabbedPane();
        setReturnedCopiesPanel = new javax.swing.JPanel();
        paperLabel1 = new javax.swing.JLabel();
        paperComboBox1 = new javax.swing.JComboBox<>();
        copiesReturnedLabel1 = new javax.swing.JLabel();
        setButton1 = new javax.swing.JButton();
        copiesReturnedSpinner1 = new javax.swing.JSpinner();
        viewExpensesPanel = new javax.swing.JPanel();
        viewPerEmployeeLabel2 = new javax.swing.JLabel();
        employeeLabel2 = new javax.swing.JLabel();
        employeeComboBox2 = new javax.swing.JComboBox<>();
        monthsPerEmployeeLabel2 = new javax.swing.JLabel();
        monthsPerEmployeeSpinner2 = new javax.swing.JSpinner();
        viewExpensesPerEmployeeButton2 = new javax.swing.JButton();
        viewExpensesPerEmployeeTextField2 = new javax.swing.JTextField();
        viewOverallLabel2 = new javax.swing.JLabel();
        monthsOverallLabel2 = new javax.swing.JLabel();
        monthsOverallSpinner2 = new javax.swing.JSpinner();
        viewExpensesOverallButton2 = new javax.swing.JButton();
        viewExpensesOverallTextField2 = new javax.swing.JTextField();
        administrativeMenuBar = new javax.swing.JMenuBar();
        administrativeMenu = new javax.swing.JMenu();
        logoutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Administrative");

        paperLabel1.setText("Paper");

        initPapers();
        paperComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                paperComboBox1ItemStateChanged(evt);
            }
        });

        copiesReturnedLabel1.setText("Copies Returned");

        setButton1.setText("Set");
        setButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setButton1ActionPerformed(evt);
            }
        });

        copiesReturnedSpinner1.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        defaultCopiesReturnedValues();

        javax.swing.GroupLayout setReturnedCopiesPanelLayout = new javax.swing.GroupLayout(setReturnedCopiesPanel);
        setReturnedCopiesPanel.setLayout(setReturnedCopiesPanelLayout);
        setReturnedCopiesPanelLayout.setHorizontalGroup(
            setReturnedCopiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(setReturnedCopiesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(setReturnedCopiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(setReturnedCopiesPanelLayout.createSequentialGroup()
                        .addGroup(setReturnedCopiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(paperLabel1)
                            .addComponent(copiesReturnedLabel1))
                        .addGap(111, 111, 111)
                        .addGroup(setReturnedCopiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(paperComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(copiesReturnedSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(setButton1))
                .addContainerGap(484, Short.MAX_VALUE))
        );
        setReturnedCopiesPanelLayout.setVerticalGroup(
            setReturnedCopiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(setReturnedCopiesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(setReturnedCopiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(paperLabel1)
                    .addComponent(paperComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(setReturnedCopiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(copiesReturnedLabel1)
                    .addComponent(copiesReturnedSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(setButton1)
                .addContainerGap(405, Short.MAX_VALUE))
        );

        AdministrativeTabbedPane.addTab("Set Returned Copies", setReturnedCopiesPanel);

        viewPerEmployeeLabel2.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        viewPerEmployeeLabel2.setText("View Per Employee");

        employeeLabel2.setText("Employee");

        initEmployees();

        monthsPerEmployeeLabel2.setText("Months");

        monthsPerEmployeeSpinner2.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        viewExpensesPerEmployeeButton2.setText("View Expenses");
        viewExpensesPerEmployeeButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewExpensesPerEmployeeButton2ActionPerformed(evt);
            }
        });

        viewExpensesPerEmployeeTextField2.setEditable(false);

        viewOverallLabel2.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        viewOverallLabel2.setText("View Overall");

        monthsOverallLabel2.setText("Months");

        monthsOverallSpinner2.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        viewExpensesOverallButton2.setText("View Expenses");
        viewExpensesOverallButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewExpensesOverallButton2ActionPerformed(evt);
            }
        });

        viewExpensesOverallTextField2.setEditable(false);

        javax.swing.GroupLayout viewExpensesPanelLayout = new javax.swing.GroupLayout(viewExpensesPanel);
        viewExpensesPanel.setLayout(viewExpensesPanelLayout);
        viewExpensesPanelLayout.setHorizontalGroup(
            viewExpensesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewExpensesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(viewExpensesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(viewPerEmployeeLabel2)
                    .addGroup(viewExpensesPanelLayout.createSequentialGroup()
                        .addGroup(viewExpensesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(employeeLabel2)
                            .addComponent(monthsPerEmployeeLabel2))
                        .addGap(98, 98, 98)
                        .addGroup(viewExpensesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(employeeComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(monthsPerEmployeeSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(viewExpensesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(viewExpensesPerEmployeeTextField2, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(viewExpensesPerEmployeeButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(104, 104, 104)
                .addGroup(viewExpensesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(viewExpensesPanelLayout.createSequentialGroup()
                        .addComponent(monthsOverallLabel2)
                        .addGap(115, 115, 115)
                        .addComponent(monthsOverallSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(viewOverallLabel2)
                    .addGroup(viewExpensesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(viewExpensesOverallTextField2, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(viewExpensesOverallButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(191, Short.MAX_VALUE))
        );
        viewExpensesPanelLayout.setVerticalGroup(
            viewExpensesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewExpensesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(viewExpensesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewPerEmployeeLabel2)
                    .addComponent(viewOverallLabel2))
                .addGap(18, 18, 18)
                .addGroup(viewExpensesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(employeeLabel2)
                    .addComponent(employeeComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(monthsOverallLabel2)
                    .addComponent(monthsOverallSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(viewExpensesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(viewExpensesPanelLayout.createSequentialGroup()
                        .addGroup(viewExpensesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(monthsPerEmployeeLabel2)
                            .addComponent(monthsPerEmployeeSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(viewExpensesPerEmployeeButton2))
                    .addGroup(viewExpensesPanelLayout.createSequentialGroup()
                        .addComponent(viewExpensesOverallButton2)
                        .addGap(18, 18, 18)
                        .addComponent(viewExpensesOverallTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(viewExpensesPerEmployeeTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(323, Short.MAX_VALUE))
        );

        AdministrativeTabbedPane.addTab("View Expenses", viewExpensesPanel);

        administrativeMenu.setText("email");

        logoutMenuItem.setText("Logout");
        logoutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutMenuItemActionPerformed(evt);
            }
        });
        administrativeMenu.add(logoutMenuItem);

        administrativeMenu.setText(email);

        administrativeMenuBar.add(administrativeMenu);

        setJMenuBar(administrativeMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(AdministrativeTabbedPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(AdministrativeTabbedPane)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void paperComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_paperComboBox1ItemStateChanged
        if(evt.getStateChange()==ItemEvent.SELECTED){
            defaultCopiesReturnedValues();
        }
    }//GEN-LAST:event_paperComboBox1ItemStateChanged

    private void setButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setButton1ActionPerformed
        try{
            PreparedStatement pst = conn.prepareStatement("UPDATE `paper` SET `copies_returned` = ? WHERE id = " + "'" + paperComboBox1.getSelectedItem() + "'");

            pst.setString(1, copiesReturnedSpinner1.getValue().toString());
            pst.execute();

            JOptionPane.showMessageDialog(null, "Set Successfull.");

            pst.close();
            
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }//GEN-LAST:event_setButton1ActionPerformed

    private void viewExpensesPerEmployeeButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewExpensesPerEmployeeButton2ActionPerformed
        try{
            String employeeQuery = "SELECT `salary`, `hiring_date` FROM `employee` WHERE email = " + "'" + employeeComboBox2.getSelectedItem() + "'";
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(employeeQuery);
            
            int salary = 0;
            String hiringDate = "";
            int employeeExpenses = 0;
            int monthsDiff = 0;
            int selectedMonths = 0;
            
            while(rs.next()){
                salary = rs.getInt("salary");
                hiringDate = rs.getString("hiring_date");              
            }
            
            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy-MM-dd");
            LocalDate localDate = LocalDate.now();
            
            //Months between now and hiring date
            long monthsBetween = ChronoUnit.MONTHS.between(
            LocalDate.parse(hiringDate).withDayOfMonth(1),
            LocalDate.parse(dtf.format(localDate)).withDayOfMonth(1));
            
            selectedMonths = Integer.valueOf(monthsPerEmployeeSpinner2.getValue().toString());
            monthsDiff = (int)monthsBetween - selectedMonths;
            
            if((int)monthsBetween != 0){
                if(monthsDiff > 0){
                    employeeExpenses = selectedMonths * salary;
                    viewExpensesPerEmployeeTextField2.setText(String.valueOf(employeeExpenses));
                }else{
                    employeeExpenses = (int)monthsBetween * salary;
                    viewExpensesPerEmployeeTextField2.setText(String.valueOf(employeeExpenses));
                }
            }else{
                viewExpensesPerEmployeeTextField2.setText("0");
            }
            
            rs.close();
            stmt.close();
            
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }//GEN-LAST:event_viewExpensesPerEmployeeButton2ActionPerformed

    private void viewExpensesOverallButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewExpensesOverallButton2ActionPerformed
        try{
            String employeeQuery = "SELECT `salary`, `hiring_date` FROM `employee`";
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(employeeQuery);
            
            int salary = 0;
            String hiringDate = "";
            int employeeExpenses = 0;
            int monthsDiff = 0;
            int selectedMonths = 0;
            int overallExpenses = 0;
            
            
            while(rs.next()){
                salary = rs.getInt("salary");
                hiringDate = rs.getString("hiring_date");              
            
                DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy-MM-dd");
                LocalDate localDate = LocalDate.now();

                //Months between now and hiring date
                long monthsBetween = ChronoUnit.MONTHS.between(
                LocalDate.parse(hiringDate).withDayOfMonth(1),
                LocalDate.parse(dtf.format(localDate)).withDayOfMonth(1));

                selectedMonths = Integer.valueOf(monthsOverallSpinner2.getValue().toString());
                monthsDiff = (int)monthsBetween - selectedMonths;

                if((int)monthsBetween != 0){
                    if(monthsDiff > 0){
                        employeeExpenses = selectedMonths * salary;
                        viewExpensesOverallTextField2.setText(String.valueOf(employeeExpenses));
                    }else{
                        employeeExpenses = (int)monthsBetween * salary;
                        viewExpensesOverallTextField2.setText(String.valueOf(employeeExpenses));
                    }
                }else{
                    employeeExpenses = 0;
                    viewExpensesOverallTextField2.setText(String.valueOf(employeeExpenses));
                }
                
                overallExpenses += employeeExpenses;
            }
            
            viewExpensesOverallTextField2.setText(String.valueOf(overallExpenses));
            
            
            rs.close();
            stmt.close();
            
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }//GEN-LAST:event_viewExpensesOverallButton2ActionPerformed

    private void logoutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutMenuItemActionPerformed
        LoginScreen var_ls = new LoginScreen();
        var_ls.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_logoutMenuItemActionPerformed
    
    private void initPapers(){
        try{
            
            String paperQuery = "SELECT `id` FROM `paper`";
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(paperQuery);

            while(rs.next()){
                paperComboBox1.addItem(rs.getString("id"));
            }

            rs.close();
            stmt.close();
            
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }
    
    private void defaultCopiesReturnedValues(){
        try{
            String copiesQuery = "SELECT `copies`, `copies_returned` FROM `paper` WHERE id = " + "'" + paperComboBox1.getSelectedItem().toString() +"'";
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(copiesQuery);
            
            while(rs.next()){
               copiesReturnedSpinner1.setModel(new javax.swing.SpinnerNumberModel(rs.getInt("copies_returned"), 0, rs.getInt("copies"), 1));
            }
            
            rs.close();
            stmt.close();
            
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }
    
    private void initEmployees(){
        try{
            
            String paperQuery = "SELECT `email` FROM `employee`";
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(paperQuery);

            while(rs.next()){
                employeeComboBox2.addItem(rs.getString("email"));
            }

            rs.close();
            stmt.close();
            
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdministrativeScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdministrativeScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdministrativeScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdministrativeScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdministrativeScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane AdministrativeTabbedPane;
    private javax.swing.JMenu administrativeMenu;
    private javax.swing.JMenuBar administrativeMenuBar;
    private javax.swing.JLabel copiesReturnedLabel1;
    private javax.swing.JSpinner copiesReturnedSpinner1;
    private javax.swing.JComboBox<String> employeeComboBox2;
    private javax.swing.JLabel employeeLabel2;
    private javax.swing.JMenuItem logoutMenuItem;
    private javax.swing.JLabel monthsOverallLabel2;
    private javax.swing.JSpinner monthsOverallSpinner2;
    private javax.swing.JLabel monthsPerEmployeeLabel2;
    private javax.swing.JSpinner monthsPerEmployeeSpinner2;
    private javax.swing.JComboBox<String> paperComboBox1;
    private javax.swing.JLabel paperLabel1;
    private javax.swing.JButton setButton1;
    private javax.swing.JPanel setReturnedCopiesPanel;
    private javax.swing.JButton viewExpensesOverallButton2;
    private javax.swing.JTextField viewExpensesOverallTextField2;
    private javax.swing.JPanel viewExpensesPanel;
    private javax.swing.JButton viewExpensesPerEmployeeButton2;
    private javax.swing.JTextField viewExpensesPerEmployeeTextField2;
    private javax.swing.JLabel viewOverallLabel2;
    private javax.swing.JLabel viewPerEmployeeLabel2;
    // End of variables declaration//GEN-END:variables
}
