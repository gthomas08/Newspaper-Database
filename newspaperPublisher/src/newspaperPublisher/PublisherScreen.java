/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package newspaperPublisher;

import java.awt.event.ItemEvent;
import java.sql.*;
import java.util.*;
import javax.swing.JOptionPane;


public class PublisherScreen extends javax.swing.JFrame {
    
    Connection conn=null;
    Statement stmt=null;
    PreparedStatement pst=null;
    ResultSet rs=null;
    
    private String email;
    private List<String> newspaperNamesList=new ArrayList<String>();
    private List<String> editorInChiefList=new ArrayList<String>();
    private List<String> papersList=new ArrayList<String>();
    
    /**
     * Creates new form PublisherScreen
     */
    public PublisherScreen(String email) {
        this.email = email;
        conn=CheckConnection.ConnectDb();
        initComponents();
    }
    
    public PublisherScreen() {
        conn=CheckConnection.ConnectDb();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        publisherPane = new javax.swing.JTabbedPane();
        editNewspaperPanel = new javax.swing.JPanel();
        nameLabel1 = new javax.swing.JLabel();
        nameTextField1 = new javax.swing.JTextField();
        publishingFrequencyLabel1 = new javax.swing.JLabel();
        publishingFrequencyComboBox1 = new javax.swing.JComboBox<>();
        editButton1 = new javax.swing.JButton();
        newspaperComboBox1 = new javax.swing.JComboBox<>();
        newspaperLabel1 = new javax.swing.JLabel();
        setCopiesInPaperPanel2 = new javax.swing.JPanel();
        newspaperLabel2 = new javax.swing.JLabel();
        paperLabel2 = new javax.swing.JLabel();
        paperComboBox2 = new javax.swing.JComboBox<>();
        copiesSpinner2 = new javax.swing.JSpinner();
        copiesLabel2 = new javax.swing.JLabel();
        newspaperComboBox2 = new javax.swing.JComboBox<>();
        setButton2 = new javax.swing.JButton();
        setEditorInChiefPanel2 = new javax.swing.JPanel();
        newspaperLabel3 = new javax.swing.JLabel();
        newspaperComboBox3 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        editorInChiefComboBox3 = new javax.swing.JComboBox<>();
        setButton3 = new javax.swing.JButton();
        viewInfoAboutPapers = new javax.swing.JPanel();
        newspaperLabel4 = new javax.swing.JLabel();
        paperLabel4 = new javax.swing.JLabel();
        copiesLabel4 = new javax.swing.JLabel();
        copiesField4 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        copiesSoldField4 = new javax.swing.JTextField();
        copiesReturnedLabel4 = new javax.swing.JLabel();
        copiesReturnedField4 = new javax.swing.JTextField();
        newspaperComboBox4 = new javax.swing.JComboBox<>();
        paperComboBox4 = new javax.swing.JComboBox<>();
        publisherMenuBar = new javax.swing.JMenuBar();
        publisherMenu = new javax.swing.JMenu();
        logoutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Publisher");

        nameLabel1.setLabelFor(nameTextField1);
        nameLabel1.setText("Name");

        publishingFrequencyLabel1.setText("Publishing Frequency");

        publishingFrequencyComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Daily", "Weekly", "Monthly" }));

        editButton1.setText("Edit");
        editButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButton1ActionPerformed(evt);
            }
        });

        initNewspaperNamesToList();

        String[] newspaperNamesArray = newspaperNamesList.toArray(new String[newspaperNamesList.size()]);
        newspaperComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(newspaperNamesArray));
        newspaperComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                newspaperComboBox1ItemStateChanged(evt);
            }
        });

        newspaperLabel1.setText("My Newspaper(s)");

        javax.swing.GroupLayout editNewspaperPanelLayout = new javax.swing.GroupLayout(editNewspaperPanel);
        editNewspaperPanel.setLayout(editNewspaperPanelLayout);
        editNewspaperPanelLayout.setHorizontalGroup(
            editNewspaperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editNewspaperPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(editNewspaperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(editButton1)
                    .addGroup(editNewspaperPanelLayout.createSequentialGroup()
                        .addGroup(editNewspaperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameLabel1)
                            .addComponent(publishingFrequencyLabel1)
                            .addComponent(newspaperLabel1))
                        .addGap(39, 39, 39)
                        .addGroup(editNewspaperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newspaperComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nameTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(publishingFrequencyComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(393, Short.MAX_VALUE))
        );
        editNewspaperPanelLayout.setVerticalGroup(
            editNewspaperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editNewspaperPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(editNewspaperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newspaperComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newspaperLabel1))
                .addGap(18, 18, 18)
                .addGroup(editNewspaperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLabel1)
                    .addComponent(nameTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(editNewspaperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(publishingFrequencyLabel1)
                    .addComponent(publishingFrequencyComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(editButton1)
                .addContainerGap(359, Short.MAX_VALUE))
        );

        defaultNewspaperNameToEdit();
        defaultPublishingFrequencyItem();

        publisherPane.addTab("Edit Newspaper", editNewspaperPanel);

        newspaperLabel2.setLabelFor(newspaperComboBox2);
        newspaperLabel2.setText("My Newspaper(s)");

        paperLabel2.setText("Paper");

        paperComboBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                paperComboBox2ItemStateChanged(evt);
            }
        });

        copiesSpinner2.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        copiesLabel2.setText("Copies");

        initNewspaperNamesToList();

        //String[] newspaperNamesArray = newspaperNamesList.toArray(new String[newspaperNamesList.size()]);
        newspaperComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(newspaperNamesArray));
        newspaperComboBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                newspaperComboBox2ItemStateChanged(evt);
            }
        });

        setButton2.setText("Set");
        setButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout setCopiesInPaperPanel2Layout = new javax.swing.GroupLayout(setCopiesInPaperPanel2);
        setCopiesInPaperPanel2.setLayout(setCopiesInPaperPanel2Layout);
        setCopiesInPaperPanel2Layout.setHorizontalGroup(
            setCopiesInPaperPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(setCopiesInPaperPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(setCopiesInPaperPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(setCopiesInPaperPanel2Layout.createSequentialGroup()
                        .addGroup(setCopiesInPaperPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newspaperLabel2)
                            .addComponent(paperLabel2)
                            .addComponent(copiesLabel2))
                        .addGap(39, 39, 39)
                        .addGroup(setCopiesInPaperPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(copiesSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(paperComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(newspaperComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(setButton2))
                .addContainerGap(540, Short.MAX_VALUE))
        );
        setCopiesInPaperPanel2Layout.setVerticalGroup(
            setCopiesInPaperPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(setCopiesInPaperPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(setCopiesInPaperPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newspaperLabel2)
                    .addComponent(newspaperComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(setCopiesInPaperPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(paperLabel2)
                    .addComponent(paperComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(setCopiesInPaperPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(copiesSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(copiesLabel2))
                .addGap(18, 18, 18)
                .addComponent(setButton2)
                .addContainerGap(359, Short.MAX_VALUE))
        );

        initPapersToList();

        String[] papersArray = papersList.toArray(new String[papersList.size()]);
        paperComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(papersArray));
        defaultCopies();

        publisherPane.addTab("Set Copies In Paper", setCopiesInPaperPanel2);

        newspaperLabel3.setLabelFor(newspaperComboBox2);
        newspaperLabel3.setText("My Newspaper(s)");

        newspaperComboBox3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                newspaperComboBox3ItemStateChanged(evt);
            }
        });

        jLabel1.setText("Editor In Chief");

        setButton3.setText("Set");
        setButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout setEditorInChiefPanel2Layout = new javax.swing.GroupLayout(setEditorInChiefPanel2);
        setEditorInChiefPanel2.setLayout(setEditorInChiefPanel2Layout);
        setEditorInChiefPanel2Layout.setHorizontalGroup(
            setEditorInChiefPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(setEditorInChiefPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(setEditorInChiefPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(setEditorInChiefPanel2Layout.createSequentialGroup()
                        .addGroup(setEditorInChiefPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newspaperLabel3)
                            .addComponent(jLabel1))
                        .addGap(73, 73, 73)
                        .addGroup(setEditorInChiefPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(editorInChiefComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(newspaperComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(setButton3))
                .addContainerGap(545, Short.MAX_VALUE))
        );
        setEditorInChiefPanel2Layout.setVerticalGroup(
            setEditorInChiefPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(setEditorInChiefPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(setEditorInChiefPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newspaperLabel3)
                    .addComponent(newspaperComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(setEditorInChiefPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(editorInChiefComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(setButton3)
                .addContainerGap(405, Short.MAX_VALUE))
        );

        initNewspaperNamesToList();

        //String[] newspaperNamesArray = newspaperNamesList.toArray(new String[newspaperNamesList.size()]);
        newspaperComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(newspaperNamesArray));
        initEditorInChiefItemsToList();
        String[] editorInChiefArray = editorInChiefList.toArray(new String[editorInChiefList.size()]);
        editorInChiefComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(editorInChiefArray));
        defaultEditorInChiefItem3();

        publisherPane.addTab("Set Editor In Chief", setEditorInChiefPanel2);

        newspaperLabel4.setText("My Newspaper(s)");

        paperLabel4.setText("Paper");

        copiesLabel4.setText("Copies");

        copiesField4.setEditable(false);

        jLabel2.setText("Copies Sold");

        copiesSoldField4.setEditable(false);

        copiesReturnedLabel4.setText("Copies Returned");

        copiesReturnedField4.setEditable(false);

        initNewspaperNamesToList();

        //String[] newspaperNamesArray = newspaperNamesList.toArray(new String[newspaperNamesList.size()]);
        newspaperComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(newspaperNamesArray));
        newspaperComboBox4.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                newspaperComboBox4ItemStateChanged(evt);
            }
        });

        paperComboBox4.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                paperComboBox4ItemStateChanged(evt);
            }
        });
        initPapersToList4();

        //String[] papersArray = papersList.toArray(new String[papersList.size()]);
        paperComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(papersArray));

        javax.swing.GroupLayout viewInfoAboutPapersLayout = new javax.swing.GroupLayout(viewInfoAboutPapers);
        viewInfoAboutPapers.setLayout(viewInfoAboutPapersLayout);
        viewInfoAboutPapersLayout.setHorizontalGroup(
            viewInfoAboutPapersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewInfoAboutPapersLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(viewInfoAboutPapersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newspaperLabel4)
                    .addComponent(paperLabel4)
                    .addComponent(copiesLabel4)
                    .addComponent(jLabel2)
                    .addComponent(copiesReturnedLabel4))
                .addGap(92, 92, 92)
                .addGroup(viewInfoAboutPapersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(copiesReturnedField4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(copiesSoldField4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(copiesField4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newspaperComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(paperComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(417, Short.MAX_VALUE))
        );
        viewInfoAboutPapersLayout.setVerticalGroup(
            viewInfoAboutPapersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewInfoAboutPapersLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(viewInfoAboutPapersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newspaperLabel4)
                    .addComponent(newspaperComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(viewInfoAboutPapersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(paperLabel4)
                    .addComponent(paperComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(viewInfoAboutPapersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(copiesLabel4)
                    .addComponent(copiesField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(viewInfoAboutPapersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(copiesSoldField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(viewInfoAboutPapersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(copiesReturnedLabel4)
                    .addComponent(copiesReturnedField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(315, Short.MAX_VALUE))
        );

        defaultCopies4();
        defaultCopiesSold4();
        defaultCopiesReturned4();

        publisherPane.addTab("View Info About Papers", viewInfoAboutPapers);

        publisherMenu.setText("email");

        logoutMenuItem.setText("Logout");
        logoutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutMenuItemActionPerformed(evt);
            }
        });
        publisherMenu.add(logoutMenuItem);

        publisherMenu.setText(email);

        publisherMenuBar.add(publisherMenu);

        setJMenuBar(publisherMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(publisherPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(publisherPane)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
 
    private void editButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButton1ActionPerformed
        try{
            if(nameTextField1.getText().isEmpty() == false){
                PreparedStatement pst = conn.prepareStatement("UPDATE `newspaper` SET name = ?, publishing_frequency = ?  WHERE name = " + "'" + newspaperComboBox1.getSelectedItem() + "'");

                // Set the fields
                pst.setString(1, nameTextField1.getText());
                pst.setString(2, publishingFrequencyComboBox1.getSelectedItem().toString());
                pst.execute();
                
                initNewspaperNamesToList();
                String[] newspaperArray = newspaperNamesList.toArray(new String[newspaperNamesList.size()]);
                newspaperComboBox1.removeAllItems();
                newspaperComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(newspaperArray));
                newspaperComboBox2.removeAllItems();
                newspaperComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(newspaperArray));
                newspaperComboBox3.removeAllItems();
                newspaperComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(newspaperArray));
                newspaperComboBox4.removeAllItems();
                newspaperComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(newspaperArray));
                
                JOptionPane.showMessageDialog(null, "Edit Successfull.");

                pst.close();
            }else{
                JOptionPane.showMessageDialog(null, "Incomplete Credentials. Try again");
            }
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }//GEN-LAST:event_editButton1ActionPerformed

    private void newspaperComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_newspaperComboBox1ItemStateChanged
        if(evt.getStateChange()==ItemEvent.SELECTED){
            defaultNewspaperNameToEdit();
            defaultPublishingFrequencyItem();
        } 
    }//GEN-LAST:event_newspaperComboBox1ItemStateChanged

    private void newspaperComboBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_newspaperComboBox2ItemStateChanged
        if(evt.getStateChange()==ItemEvent.SELECTED){
            initPapersToList();
            String[] papersArray = papersList.toArray(new String[papersList.size()]);
            paperComboBox2.removeAllItems();
            paperComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(papersArray));
        }
    }//GEN-LAST:event_newspaperComboBox2ItemStateChanged

    private void paperComboBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_paperComboBox2ItemStateChanged
        if(evt.getStateChange()==ItemEvent.SELECTED){
            defaultCopies();
        }
    }//GEN-LAST:event_paperComboBox2ItemStateChanged

    private void setButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setButton2ActionPerformed
        try{
            if(newspaperComboBox2.getSelectedIndex() != -1 && paperComboBox2.getSelectedIndex() != -1){
                PreparedStatement pst = conn.prepareStatement("UPDATE `paper` SET copies = ? WHERE id = " + "'" + paperComboBox2.getSelectedItem() + "'");

                // Set the fields
                pst.setString(1, copiesSpinner2.getValue().toString());
                pst.execute();
                
                JOptionPane.showMessageDialog(null, "Set Successfull.");

                pst.close();
            }else{
                JOptionPane.showMessageDialog(null, "Incomplete Credentials. Try again");
            }
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }//GEN-LAST:event_setButton2ActionPerformed

    private void newspaperComboBox3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_newspaperComboBox3ItemStateChanged
        if(evt.getStateChange()==ItemEvent.SELECTED){
            defaultEditorInChiefItem3();
        }
    }//GEN-LAST:event_newspaperComboBox3ItemStateChanged

    private void setButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setButton3ActionPerformed
        try{
            PreparedStatement pst = conn.prepareStatement("UPDATE `newspaper` SET editor_in_chief_email = ?  WHERE name = " + "'" + newspaperComboBox3.getSelectedItem() + "'");

            // Set the field
            pst.setString(1, editorInChiefComboBox3.getSelectedItem().toString());
            pst.execute();

            JOptionPane.showMessageDialog(null, "Set Successfull.");

            pst.close();
            
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }//GEN-LAST:event_setButton3ActionPerformed

    private void newspaperComboBox4ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_newspaperComboBox4ItemStateChanged
        if(evt.getStateChange()==ItemEvent.SELECTED){
            initPapersToList4();
            String[] papersArray = papersList.toArray(new String[papersList.size()]);
            paperComboBox4.removeAllItems();
            paperComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(papersArray));
            
            defaultCopies4();
            defaultCopiesSold4();
            defaultCopiesReturned4();
        }
    }//GEN-LAST:event_newspaperComboBox4ItemStateChanged

    private void paperComboBox4ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_paperComboBox4ItemStateChanged
        if(evt.getStateChange()==ItemEvent.SELECTED){
            defaultCopies4();
            defaultCopiesSold4();
            defaultCopiesReturned4();
        }
    }//GEN-LAST:event_paperComboBox4ItemStateChanged

    private void logoutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutMenuItemActionPerformed
        LoginScreen var_ls = new LoginScreen();
        var_ls.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_logoutMenuItemActionPerformed
    
    private void initNewspaperNamesToList(){
        try{
            String newspaperQuery = "SELECT `name` FROM `newspaper` WHERE owner_email = " + "'" + email + "'";
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(newspaperQuery);
            
            newspaperNamesList.clear();
            
            while(rs.next()){
                newspaperNamesList.add(rs.getString("name"));
            }
            
            if(papersList.isEmpty() == false){
                Collections.sort(newspaperNamesList);
            }
            
            rs.close();
            
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }
    
    private void defaultNewspaperNameToEdit(){
        try{
            String newspaperQuery = "SELECT `name` FROM `newspaper` WHERE name = " + "'" + newspaperComboBox1.getSelectedItem() + "'";
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(newspaperQuery);
            
            if(rs.next()){
                nameTextField1.setText(rs.getString("name"));
            }
            
            rs.close();
                    
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }
    
    private void defaultPublishingFrequencyItem(){
        try{
            String newspaperQuery = "SELECT `publishing_frequency` FROM `newspaper` WHERE name = " + "'" + newspaperComboBox1.getSelectedItem() + "'";
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(newspaperQuery);
            
            while(rs.next()){
                publishingFrequencyComboBox1.setSelectedItem(rs.getString("publishing_frequency"));
            }
            
            rs.close();
            stmt.close();
            
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }
    
    private void initEditorInChiefItemsToList(){
        try{
            String newspaperQuery = "SELECT DISTINCT `email` FROM `journalist`";
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(newspaperQuery);
            
            while(rs.next()){
                editorInChiefList.add(rs.getString("email"));
            }
            
            if(papersList.isEmpty() == false){
                Collections.sort(editorInChiefList);
            }
            
            rs.close();
            stmt.close();
            
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }
    
    private void initPapersToList(){
        try{
            String newspaperQuery = "SELECT `id` FROM `paper` WHERE newspaper_name = " + "'" + newspaperComboBox2.getSelectedItem() + "'";
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(newspaperQuery);
            
            papersList.clear();
            
            while(rs.next()){
                papersList.add(rs.getString("id"));
            }
            
            if(papersList.isEmpty() == false){
                Collections.sort(papersList);
            }
            
            rs.close();
            
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }
    
    private void defaultCopies(){
        try{
            if(paperComboBox2.getSelectedIndex() != -1){
                String newspaperQuery = "SELECT `copies` FROM `paper` WHERE id = " + "'" + paperComboBox2.getSelectedItem() + "'";
                Statement stmt = conn.createStatement();
                ResultSet rs = stmt.executeQuery(newspaperQuery);
                
                while(rs.next()){
                    copiesSpinner2.setValue(rs.getInt("copies"));
                }

                rs.close();
                stmt.close();
            }
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }
    
    private void defaultEditorInChiefItem3(){
        try{
            String newspaperQuery = "SELECT `editor_in_chief_email` FROM `newspaper` WHERE name = " + "'" + newspaperComboBox3.getSelectedItem() + "'";
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(newspaperQuery);
            
            while(rs.next()){
                editorInChiefComboBox3.setSelectedItem(rs.getString("editor_in_chief_email"));
            }
            
            rs.close();
            stmt.close();
            
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }
    
    private void initPapersToList4(){
        try{
            String newspaperQuery = "SELECT `id` FROM `paper` WHERE newspaper_name = " + "'" + newspaperComboBox4.getSelectedItem() + "'";
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(newspaperQuery);
            
            papersList.clear();
            
            while(rs.next()){
                papersList.add(rs.getString("id"));
            }
            
            if(papersList.isEmpty() == false){
                Collections.sort(papersList);
            }
            
            rs.close();
            
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }
    
    private void defaultCopies4(){
        try{
            if(paperComboBox4.getSelectedIndex() != -1){
                String newspaperQuery = "SELECT `copies` FROM `paper` WHERE id = " + "'" + paperComboBox4.getSelectedItem() + "'";
                Statement stmt = conn.createStatement();
                ResultSet rs = stmt.executeQuery(newspaperQuery);
                
                while(rs.next()){
                    copiesField4.setText(rs.getString("copies"));
                }

                rs.close();
                stmt.close();
            }else{
                copiesField4.setText(" ");
            }
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }
    
    private void defaultCopiesSold4(){
        try{
            if(paperComboBox4.getSelectedIndex() != -1){
                String newspaperQuery = "SELECT `copies_sold` FROM `paper` WHERE id = " + "'" + paperComboBox4.getSelectedItem() + "'";
                Statement stmt = conn.createStatement();
                ResultSet rs = stmt.executeQuery(newspaperQuery);
                
                while(rs.next()){
                    copiesSoldField4.setText(rs.getString("copies_sold"));
                }

                rs.close();
                stmt.close();
            }else{
                copiesSoldField4.setText(" ");
            }
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }
            
    private void defaultCopiesReturned4(){
        try{
            if(paperComboBox4.getSelectedIndex() != -1){
                String newspaperQuery = "SELECT `copies_returned` FROM `paper` WHERE id = " + "'" + paperComboBox4.getSelectedItem() + "'";
                Statement stmt = conn.createStatement();
                ResultSet rs = stmt.executeQuery(newspaperQuery);
                
                while(rs.next()){
                    copiesReturnedField4.setText(rs.getString("copies_returned"));
                }

                rs.close();
                stmt.close();
            }else{
                copiesReturnedField4.setText(" ");
            }
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PublisherScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PublisherScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PublisherScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PublisherScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PublisherScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField copiesField4;
    private javax.swing.JLabel copiesLabel2;
    private javax.swing.JLabel copiesLabel4;
    private javax.swing.JTextField copiesReturnedField4;
    private javax.swing.JLabel copiesReturnedLabel4;
    private javax.swing.JTextField copiesSoldField4;
    private javax.swing.JSpinner copiesSpinner2;
    private javax.swing.JButton editButton1;
    private javax.swing.JPanel editNewspaperPanel;
    private javax.swing.JComboBox<String> editorInChiefComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuItem logoutMenuItem;
    private javax.swing.JLabel nameLabel1;
    private javax.swing.JTextField nameTextField1;
    private javax.swing.JComboBox<String> newspaperComboBox1;
    private javax.swing.JComboBox<String> newspaperComboBox2;
    private javax.swing.JComboBox<String> newspaperComboBox3;
    private javax.swing.JComboBox<String> newspaperComboBox4;
    private javax.swing.JLabel newspaperLabel1;
    private javax.swing.JLabel newspaperLabel2;
    private javax.swing.JLabel newspaperLabel3;
    private javax.swing.JLabel newspaperLabel4;
    private javax.swing.JComboBox<String> paperComboBox2;
    private javax.swing.JComboBox<String> paperComboBox4;
    private javax.swing.JLabel paperLabel2;
    private javax.swing.JLabel paperLabel4;
    private javax.swing.JMenu publisherMenu;
    private javax.swing.JMenuBar publisherMenuBar;
    private javax.swing.JTabbedPane publisherPane;
    private javax.swing.JComboBox<String> publishingFrequencyComboBox1;
    private javax.swing.JLabel publishingFrequencyLabel1;
    private javax.swing.JButton setButton2;
    private javax.swing.JButton setButton3;
    private javax.swing.JPanel setCopiesInPaperPanel2;
    private javax.swing.JPanel setEditorInChiefPanel2;
    private javax.swing.JPanel viewInfoAboutPapers;
    // End of variables declaration//GEN-END:variables
}
